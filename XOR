
import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam

# XOR dataset
X = np.array([
    [0, 0],
    [0, 1],
    [1, 0],
    [1, 1]
])

y = np.array([
    [0],
    [1],
    [1],
    [0]
])

# Create model
model = Sequential()
model.add(Dense(8, input_dim=2, activation='relu', kernel_initializer='he_normal'))
model.add(Dense(4, activation='relu', kernel_initializer='he_normal'))
model.add(Dense(1, activation='sigmoid'))

# Compile model
optimizer = Adam(learning_rate=0.05)
model.compile(loss='binary_crossentropy', optimizer=optimizer, metrics=['accuracy'])

# Train model
history = model.fit(X, y, epochs=2000, verbose=0)

# Evaluate
predictions = model.predict(X)
predicted_classes = np.round(predictions)

print("\nXOR Gate Simulation Results:")
print("----------------------------")
for i in range(len(X)):
    print(f"Input: {X[i]} â†’ Predicted: {int(predicted_classes[i][0])} (Expected: {y[i][0]})")

# Print final accuracy
loss, accuracy = model.evaluate(X, y, verbose=0)
print(f"\nFinal Accuracy: {accuracy*100:.2f}%")
